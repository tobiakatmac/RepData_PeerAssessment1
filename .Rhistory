table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, strip=FALSE,pch=20, xlab="myxlab", ylab="myylab", main="mymain")
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE,pch=20, xlab="myxlab", ylab="myylab", main="mymain")
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE,pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds,pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(2)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
rgb(0, 0.5, ...)
rgb(0, 0.5, 0.5)
plot(x,y,,pch=19,col=rgb(0, 0.5, 0.5))
plot(x,y,,pch=19,col=rgb(0, 0.5, 0.5,0.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pla <- colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano,pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, col=drv)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom=boxplot)
qplot(drv, hwy, data=mpg, geom="boxplot)
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, factes=.~drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=.~drv, binwidth=2)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"),factes=.~drv)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"),facets=.~drv)
g <- ggplot(mpg, aes(disp, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2, aes(color=drv))
g+geom_point(size=4,alpha=1/2, aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(size=2,alpha=1/2, aes(color=drv))+geom_smooth(size=4, linetype=3, method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l",ylim=c(-3,3))
g <- ggplot(testdat, aes(myx,myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)) )
g+geom_point()
g+geom_point()+facet_grit(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_points(alpha=1/3)+facet_grid(cut~car2)
g + geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds, aes(carat,price), geom_boxplot(), facet_grid(.~cut)
ggplot(diamonds, aes(carat,price))+ geom_boxplot()+ facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies, smooth = "loess")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?par
?trellis.par.set()
?print.trellis()
?splom()
?llines()
library(swirl)
swirl()
dist(dataFrame)
hc -> hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
camt
cmat
points(cx, cy, col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
libaries("swirl")
libary(swirl)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd$v[,1:2]
svd$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(myImage)
image(a1)
myImage(a1)
a1 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table
table(ssd$activity)
sub1 <. subset(ssd, subject==1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[10:12],maxCon)
)
mdist <- dist(c(sub1(10:12),maxCon)
)
mdist <- dist(c(sub1[10:12],maxCon))
s
sub1
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity,nstart=100)
kClust <- kmeans(sub1[,-c(562,563)],6,nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
?readRDS
?load
?textConnection
?with
?ylim
?tapply
?rep
?plot
library(swirl)
swirl()
fim(pm0)
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names <- make.names(cnames[[1]][wol])
names <- make.names(cnames[[1]][wcol])
cnames <- make.names(cnames[[1]][wcol])
cnames
names(pm0) <- cnames
bla <- cnames
names(p0) <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
cnames
names(pm0)
names(pm0) <- cnames
names(pm0)
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
names(pm1) <- cnames
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1)
)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), %Y%m%d)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
?sapply
?split
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0Sub$Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
exit
exit()
quit
quit()
quit()
library(swirl)
swirl()
swirl()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2009)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.call(pm0sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(median(x0sub),na.rm=TRUE)
abline(median(x0sub, na.rm=TRUE), lwd=2)
?abline
head(x0sub)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, ra.rm=TRUE
)
rng <- range(x0sub, x1sub, ra.rm=TRUE)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame
d0 <- data.frame(names(mn0), mean==mn0)
d0 <- data.frame(names(mn0), mean=mn0)
d0 <- data.frame(state =names(mn0), mean=mn0)
d0
d1 <- data.frame(state =names(mn1), mean=mn1)
mrg <- merge(d0,d1,by=="state")
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
?subset
?split
?tapply
?pairs
install.packages(knitr)
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
setwd("/home/tobias/Dokumente/DataScience/repo/RepData_PeerAssessment1/")
unzip("activity.zip")
act <- read.csv("activity.csv")
act$date <- as.Date(strptime(act$date, format="%Y-%m-%d"))
actNA <- act[!is.na(act$steps),]
stepsPerDay <- with(act, tapply(steps,date,sum))
stepsPerDay <- stepsPerDay[!is.na(stepsPerDay)]
hist(stepsPerDay, xlab="Steps per day", main="Histogram: steps per day")
mean(stepsPerDay)
median(stepsPerDay)
stepsPerInt <- with(actNA, tapply(steps,interval,mean))
plot(x=names(stepsPerInt),y=stepsPerInt, type="l",xlab="minutes",ylab="averaged number of steps")
maxInt <- which(stepsPerInt==max(stepsPerInt))
sum(is.na(act$steps))
days <- length(unique(act$date))
stepsPerIntRep <- rep(stepsPerInt, days)
actNoNA <- act
actNoNA$steps[is.na(act$steps)] <- stepsPerIntRep[is.na(act$steps)]
stepsPerDayNA <- with(actNoNA, tapply(steps,date,sum))
hist(stepsPerDayNA, xlab="Steps per day", main="Histogram: steps per day")
mean(stepsPerDayNA)
median(stepsPerDayNA)
library(dplyr)
actNoNA <- mutate(actNoNA, day=weekdays(actNoNA$date))
actNoNA$day <- ifelse(actNoNA$day %in% c("samedi","dimanche"),"weekend","weekday")
stepsPerIntNA <- with(actNoNA, tapply(steps,list(interval,day),mean))
as.data.frame.matrix(stepsPerIntNA)
dim(stepsPerIntNA)
lengthdf <- dim(stepsPerIntNA)[1]*dim(stepsPerIntNA)[2]
for (i in 1:dim(stepsPerIntNA)[1]) {
for (j in 1:dim(stepsPerIntNA)[2]) {
df[idx,1] <- stepsPerIntNA[i,j]
df[idx,2] <- rownames(stepsPerIntNA)[i]
df[idx,3] <- as.numeric(colnames(stepsPerIntNA)[j])
idx <- idx + 1
}
}
idx <- 1
df <- data.frame(rep(0,lengthdf),rep(0,lengthdf),rep(0,lengthdf))
idx <- 1
for (i in 1:dim(stepsPerIntNA)[1]) {
for (j in 1:dim(stepsPerIntNA)[2]) {
df[idx,1] <- stepsPerIntNA[i,j]
df[idx,2] <- rownames(stepsPerIntNA)[i]
df[idx,3] <- as.numeric(colnames(stepsPerIntNA)[j])
idx <- idx + 1
}
}
warnings()
df
for (i in 1:dim(stepsPerIntNA)[1]) {
for (j in 1:dim(stepsPerIntNA)[2]) {
df[idx,1] <- stepsPerIntNA[i,j]
df[idx,2] <- as.numeric(rownames(stepsPerIntNA)[i])
df[idx,3] <- colnames(stepsPerIntNA)[j]
idx <- idx + 1
}
}
head(df)
colnames(stepsPerIntNA)
dim(stepsPerIntNA)
colnames(stepsPerIntNA)[j]
colnames(stepsPerIntNA)[1]
colnames(stepsPerIntNA)[2]
head(stepsPerIntNA)
idx <- 1
for (i in 1:dim(stepsPerIntNA)[1]) {
for (j in 1:dim(stepsPerIntNA)[2]) {
df[idx,1] <- stepsPerIntNA[i,j]
df[idx,2] <- as.numeric(rownames(stepsPerIntNA)[i])
df[idx,3] <- colnames(stepsPerIntNA)[j]
idx <- idx + 1
}
}
head(df)
names(df) <- c("steps","interval","day")
library(ggplot2)
head(df)
with(df, qplot(x=interval, y=steps, facets = day~.))
with(df, qplot(x=interval, y=steps, facets = day~.,type="l"))
?qplot
with(df, qplot(x=interval, y=steps, facets = day~., geom="line"))
